version: "2"
services:
  nginx-proxy:
    container_name: nginx
    image: jwilder/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d:rw
      - html:/usr/share/nginx/html:rw
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    links:
      - app
  encrypt:
    container_name: encrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhost:/etc/nginx/vhost.d:rw
      - html:/usr/share/nginx/html:rw
    links: 
      - app
      - nginx-proxy
  app:
    container_name: app
    restart: always
    build: .
    volumes:
      - certs:/certs
      - vhost:/vhost
      - html:/html
    environment:
      - VIRTUAL_HOST=<domain / subdomain>
      - LETSENCRYPT_HOST=<domain / subdomain>
      - LETSENCRYPT_EMAIL=<email>
      - SECRET=<express-session secret>
      - DB_USER=<mongoDB username>
      - DB_PS=<mongoDB password>
    ports:
      - "<Host PORT>:<Container PORT>"
    links:
      - mongo
  mongo:
    container_name: mongo
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=<mongoDB username>
      - MONGO_INITDB_ROOT_PASSWORD=<mongoDB password>
    volumes:
      - ./data:/data/db
volumes:
  certs:
  vhost:
  html: